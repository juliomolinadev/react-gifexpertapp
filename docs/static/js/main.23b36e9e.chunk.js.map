{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC7B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACC,sBAAMC,SATc,SAACC,GACrBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAKf,SACC,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdd,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,a,+BCPZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UACrDH,GAFqB,+DAIHI,MAAMF,GAJH,cAIhBG,EAJgB,gBAKCA,EAAKC,KAAKD,GALX,uBAKdE,EALc,EAKdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXd,kBAefM,GAfe,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGpC,OACC,sBAAKc,UAAU,2DAAf,UACC,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJMO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACzB,ECF2B,SAACA,GAC5B,MAA0Bd,mBAAS,CAClCqB,KAAM,GACNa,SAAS,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OARAC,qBAAU,WACTxB,EAAQC,GAAUwB,MAAK,SAACC,GACvBH,EAAS,CACRf,KAAMkB,EACNL,SAAS,SAGT,CAACpB,IACGqB,EDZ2BK,CAAa1B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACC,qCACC,oBAAIJ,UAAU,sDAAd,SAAqEhB,IACpEoB,GAAW,mBAAGJ,UAAU,qDAAb,qBACZ,qBAAKA,UAAU,YAAf,SACEH,EAAOJ,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aETdgB,EAAe,WAC3B,MAAoCzC,mBAAS,CAAC,WAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACC,qCACC,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACES,EAAWe,KAAI,SAACT,GAAD,OACf,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCVnB4B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.23b36e9e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n\tconst [inputValue, setInputValue] = useState(\"\");\n\n\tconst handleInputChange = (e) => {\n\t\tsetInputValue(e.target.value);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (inputValue.trim().length > 2) {\n\t\t\tsetCategories((categories) => [inputValue, ...categories]);\n\t\t\tsetInputValue(\"\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input type=\"text\" value={inputValue} onChange={handleInputChange} />\n\t\t</form>\n\t);\n};\n\nAddCategory.propTypes = {\n\tsetCategories: PropTypes.func.isRequired\n};\n","export const getGifs = async (category) => {\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n\t\tcategory\n\t)}&limit=10&api_key=40NwHbLFGBBwnEsdxbDw5ZEvkqJoPlNl`;\n\tconst resp = await fetch(url);\n\tconst { data } = await resp.json(resp);\n\n\tconst gifs = data.map((img) => {\n\t\treturn {\n\t\t\tid: img.id,\n\t\t\ttitle: img.title,\n\t\t\turl: img.images?.downsized_medium.url\n\t\t};\n\t});\n\n\treturn gifs;\n};\n","import React from \"react\";\n\nexport const GifGridItem = ({ title, url }) => {\n\t// console.log(id, title, url);\n\n\treturn (\n\t\t<div className=\"card animate__animated animate__fadeIn animate__delay-2s\">\n\t\t\t<img src={url} alt={title} />\n\t\t\t<p>{title}</p>\n\t\t</div>\n\t);\n};\n","import React /*, { useEffect, useState } */ from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n\tconst { data: images, loading } = useFetchGifs(category);\n\n\treturn (\n\t\t<>\n\t\t\t<h3 className=\"animate__animated animate__fadeIn animate__delay-2s\">{category}</h3>\n\t\t\t{loading && <p className=\"animate__animated animate__flash animate__delay-2s\">Loading</p>}\n\t\t\t<div className=\"card-grid\">\n\t\t\t\t{images.map((img) => (\n\t\t\t\t\t<GifGridItem key={img.id} {...img} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n\tconst [state, setState] = useState({\n\t\tdata: [],\n\t\tloading: true\n\t});\n\n\tuseEffect(() => {\n\t\tgetGifs(category).then((imgs) => {\n\t\t\tsetState({\n\t\t\t\tdata: imgs,\n\t\t\t\tloading: false\n\t\t\t});\n\t\t});\n\t}, [category]);\n\treturn state;\n};\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GifExpertApp = () => {\n\tconst [categories, setCategories] = useState([\"Naruto\"]);\n\n\treturn (\n\t\t<>\n\t\t\t<h2>GifExpertApp</h2>\n\t\t\t<AddCategory setCategories={setCategories} />\n\t\t\t<hr />\n\n\t\t\t<ol>\n\t\t\t\t{categories.map((category) => (\n\t\t\t\t\t<GifGrid key={category} category={category} />\n\t\t\t\t))}\n\t\t\t</ol>\n\t\t</>\n\t);\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GifExpertApp } from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}